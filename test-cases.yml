---
#Пользователь должен иметь возможность искать товары по ключевому слову или категории
- summary: |
    Проверка работы поиска по ключевому слову. Успешно
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: |
    Выбрать ключевое слово, которое используется в нескольких товарах
  test-data: |
    Ключевое слово: iPhone
  steps:
    - Вводим ключевое слово на странице с товарами
    - Удаляем ключевое слово из поля поиска.
  expected-result: >
    На странице с товарами остались товары только с этим ключевым
    словом в названии. После очистки поля ввода пользователь видит снова все
    товары

- summary: |
    Проверка работы поиска по ключевому слову. Неуспешно
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: Выбрать ключевое слово, которое не используется ни в одном товаре
  test-data: |
    Ключевое слово: wwqqrrtt
  steps:
    - Вводим ключевое слово на странице с товарами
  expected-result: >
    Пользователь должен увидеть на странице товаров сообщение, что
    ничего не найдено

- summary: |
    Проверка работы поиска по категории. Успешно
  requirement: >
    Пользователь должен иметь возможность искать товары по ключевому
    слову или категории
  prerequisites: Выбрать категорию, для которой есть несколько товаров
  test-data: |
    Категория: Apple
  steps:
    - Выбираем категорию
    - Отменяем поиск по выбранной категории
  expected-result: >
    На странице с товарами остались товары только с выбранной
    категорией. После отмены поиска по выбранной категрии пользователь должен
    увидеть снова все товары

- summary: |
    Проверка работы фильтра по цене. Успешно
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: Найти товар, который точно должен удовлетворить условиям фильтра
    по цене с учетом скидки
  test-data: |
    Значения фильтра по цене: от 20 до 30
  steps:
    - Вводим значения фильтра по цене
    - Очищаем поля ввода для фильтра
  expected-result: >
    На странице с товарами остались товары, у которых цена со
    скидкой входит в выбранный диапозон. После очистки полей ввода пользователь
    должен увидеть снова все товары

- summary: |
    Проверка работы фильтра по цене. Все значения фильтра 0. Неуспешно
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: отсутствуют
  test-data: |
    Значения фильтра по цене: от 0 до 0
  steps:
    - Вводим значения фильтра по цене
    - Очищаем поля ввода для фильтра
  expected-result: >
    На странице должна появиться надпись о том, что ничего не
    найдено. После очистки полей ввода пользователь должен увидеть снова все
    товары

- summary: >
    Проверка работы фильтра по цене. Все значения фильтра больше, чем самый
    дорогой товар. Неуспешно
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: отсутствуют
  test-data: |
    Значения фильтра по цене: от 1000000 до 1000000000
  steps:
    - Вводим значения фильтра по цене
    - Очищаем поля ввода для фильтра
  expected-result: >
    На странице должна появиться надпись о том, что ничего не
    найдено. После очистки полей ввода пользователь должен увидеть снова все
    товары
- summary: >
    Проверка работы фильтра по цене. Нижняя граница диапозона больше, чем
    верхняя. Неуспешно
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: отсутствуют
  test-data: |
    Значения фильтра по цене: от 1000 до 100
  steps:
    - Вводим значения фильтра по цене
    - Очищаем поля ввода для фильтра
  expected-result: >
    На странице должна появиться надпись о том, что ничего не
    найдено. После очистки полей ввода пользователь должен увидеть снова все
    товары

- summary: |
    Проверка работы поиска по бренду. Успешно
  requirement: |
    Пользователь должен иметь возможность фильтровать товары
  prerequisites: |
    Выбрать несколько брендов, чьи товары есть на странице
  test-data: |
    Бренды: mastar watch, LouisWill
  steps:
    - Выбираем все бренды из теста сразу
    - Оставляем один из брендов теста включеннымю
    - Предыдущий бренд из теста отключаем, следующий включаем
    - Отключаем фильтрацию по брендам
  expected-result:
    - После выбора нескольких брендов на странице выводятся все товары этого
      брендам
    - При выборе одного бренда на странице выводятся товары этого брендам
    - При переключении брендов на странице выводятся товары выбранного брендам
    - При отключении всех брендов на странице выводятся все товары

- summary: |
    Просмотр нескольких страниц с товарами. Успешно
  requirement: >
    Пользователь должен иметь возможность просматривать товары и
    просматривать подробную информацию о товаре
  prerequisites: Все фильтры и отборы отключены
  test-data: |
    отсутствуют
  steps:
    - Листаем страницы с товарами, используя контролы пагинации. Листаем вперед
      и назад
  expected-result: >
    На каждой следующей странице пользователь видит новый перечень
    товаров. У каждого товара видны цена, цена со скидкой, рейтинг, остаток и
    кнопка Добавить в корзину.
- summary: |
    Просмотр подробной информации о товаре. Успешно
  requirement: >
    Пользователь должен иметь возможность просматривать товары и
    просматривать подробную информацию о товаре
  prerequisites: На странице со списком товаров должны быть товары.
  test-data: |
    отсутствуют
  steps:
    - Выбираем любой товар на странице
    - Нажимаем на карточку любого товара
  expected-result:
    - на странице товара видим основное фото
    - галерею фото
    - рейтинг
    - бренд
    - цену без скидки
    - цену со скидкой
    - размер скидки
    - категорию
    - остаток товаров
    - кнопку Добавить в корзину
    - описание свойст и характеристик товара в удобном для ознакомления виде
